{
	summary:
		'Query the interface version available from a repository.',
	includes:
	[
		'iv/base.h',
		'iv/repository.h'
	],
	synopsis:
	[
		{
			type:	'function',
			name:	'iv_repository_query',
			parameters:
			[
				{
					type:	[ 'const', 'iv_repository_t', '*' ],
					name:	'ivr',
					description: 'The repository.'
				},
				{
					type:	[ 'const', 'char', '*' ],
					name:	'key',
					description:
					[
						'An entry key, or ',
						{
							type:	'constant',
							value:	'NULL'
						},
						'.'
					]
				},
				{
					type:	[ 'const', 'char', '*' ],
					name:	'iid',
					description: 'An interface identifier.'
				},
				{
					type:	'iv_version_t',
					name:	'base_version',
					description: 'A base interface version.'
				}
			],
			returns:
			{
				type:	'iv_version_t',
				description:
				[
					'The highest available version, or ',
					{
						type:	'constant',
						value:	'IV_VERSION_NONE'
					},
					' if none was found.'
				]
			}
		}
	],
	description:
	[
		'Get the highest registered version that is compatible with the requested interface ID/version for a given key.',
		' A key value of ',
		{
			type:	'constant',
			value:	'NULL'
		},
		' is equivilent to "".'
	],
	see:
	[
		{
			type:	'function',
			name:	'iv_repository_create',
			section:	'3'
		},
		{
			type:   'function',
			name:   'iv_repository_get',
			parameters:
			[
				[ 'iv_repository_t', '*' ],
				[ 'const', 'char', '*' ],
				[ 'const', 'char', '*' ],
				'iv_version_t'
			],
			section:	'3'
		},
		{
			type:	'function',
			name:	'iv_repository_remove',
			parameters:
			[
				[ 'iv_repository_t', '*' ],
				[ 'const', 'char', '*' ],
				[ 'const', 'char', '*' ],
				'iv_version_t',
				[ 'void', '**' ]
			],
			section:	'3'
		},
		{
			type:	'function',
			name:	'iv_repository_set',
			parameters:
			[
				[ 'iv_repository_t', '*' ],
				[ 'const', 'char', '*' ],
				[ 'const', 'char', '*' ],
				'iv_version_t',
				[ 'void', '*' ],
				[ 'void', '**' ]
			],
			section:	'3'
		}
	],
	since:	'1.0'
}
