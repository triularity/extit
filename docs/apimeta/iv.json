{
	"title": "Interface Versioning",
	"description":
	[
		"..."
	],
	"includes":
	[
		"iv/base.h"
	],
	"synopsis":
	[
		{
			"type": "macro",
			"name": "IV_LIB_VERSION",
			"description":
			[
				"The library package version representing the major, minor, and patch level as a single integer value.",
				" The value is effectively equivalent to ",
				{
					"type": "text:code",
					"value": "(IV_LIB_VERSION_MAJOR * 65536) + (IV_LIB_VERSION_MINOR * 256) + IV_LIB_VERSION_PATCH",
					"code": true
				},
				"."
			],
			"since": "1.0"
		},
		{
			"type": "macro",
			"name": "IV_LIB_VERSION_MAJOR",
			"description": "The library package major version.",
			"since": "1.0"
		},
		{
			"type": "macro",
			"name": "IV_LIB_VERSION_MINOR",
			"description": "The library package minor version.",
			"since": "1.0"
		},
		{
			"type": "macro",
			"name": "IV_LIB_VERSION_PATCH",
			"description": "The library package patch level.",
			"since": "1.0"
		},
		{
			"type": "macro",
			"name": "IV_VERSION",
			"parameters":
			[
				{
					"name": "major",
					"description": "The major version (0 - 65535)."
				},
				{
					"name": "minor",
					"description": "The minor version (0 - 65535)."
				}
			],
			"returns": "An interface version.",
			"description":
			[
				"Create an interface version value from a major and minor version.",
				" This is effectively equivalent to ",
				{
					"type": "text:code",
					"value": "("
				},
				{
					"type": "ref:parameter",
					"name": "major"
				},
				{
					"type": "text:code",
					"value": " * 65536) + "
				},
				{
					"type": "ref:parameter",
					"name": "minor"
				},
				"."
			],
			"since": "1.0"
		},
		{
			"type": "macro",
			"name": "IV_VERSION_MAJOR",
			"parameters":
			[
				{
					"name": "iv",
					"description": "The interface version."
				}
			],
			"returns": "The major version value (0 - 65535).",
			"description": "Extract the major version from an interface version.",
			"since": "1.0"
		},
		{
			"type": "macro",
			"name": "IV_VERSION_MINOR",
			"parameters":
			[
				{
					"name": "iv",
					"description": "The interface version."
				}
			],
			"returns": "The minor version value (0 - 65535).",
			"description": "Extract the minor version from an interface version.",
			"since": "1.0"
		},
		{
			"type": "macro",
			"name": "IV_VERSION_NONE",
			"description":
			[
				"A special value representing 'no version'.",
				" This is equivalent to ",
				{
					"type": "text:code",
					"value": "IV_VERSION(0, 0)",
					"code": true
				},
				"."
			],
			"since": "1.0"
		},
		{
			"type": "enum",
			"_name": "_iv_bool",
			"typedef": "iv_bool_t",
			"members":
			[
				{
					"name": "IV_FALSE",
					"description": "The false value."
				},
				{
					"name": "IV_TRUE",
					"description": "The true value."
				}
			],
			"description": "A boolean type used by the IV library.",
			"since": "1.0"
		},
		{
			"type": "typedef",
			"value": "uint32_t",
			"name": "iv_version_t",
			"description":
			[
				"An interface version.",
				" This is an unsigned 32-bit value with the major version in the upper 16-bits and the minor version in the lower 16-bits."
			],
			"since": "ABI 1.0"
		}
	],
	"see":
	[
		{
			"type": "ref:function",
			"name": "iv_matches",
			"section": "3"
		},
		{
			"type": "ref:generic",
			"name": "Interface Versioning Map",
			"link": "iv_map",
			"section": "3"
		},
		{
			"type": "ref:generic",
			"name": "Interface Versioning Repository",
			"link": "iv_repository",
			"section": "3"
		}
	]
}
