{
	"title": "IV Utilities",
	"description": "Interface Versioning Utilities",
	"includes":
	[
		"iv/base.h",
		"iv/util.h"
	],
	"libraries":
	[
		"iv_util"
	],
	"synopsis":
	[
		{
			"type": "macro",
			"name": "IV_IID_STRCMP",
			"parameters":
			[
				{
					"name": "iid_1",
					"description": "An interface ID."
				},
				{
					"name": "iid_2",
					"description": "An interface ID."
				}
			],
			"returns":
			[
				{
					"type": "text:code",
					"value": "0"
				},
				" if the identifiers are equal."
			],
			"summary": "Compare two interface identifiers.",
			"description":
			[
				"Compare two interface identifiers with the same semantics as ",
				{
					"type": "ref:function",
					"name": "strcmp",
					"parameters":
					[
						[ "const",  "char", "*" ],
						[ "const",  "char", "*" ]
					]
				},
				"."
			]
		},
		{
			"type": "macro",
			"name": "IV_IID_STRNCMP",
			"parameters":
			[
				{
					"name": "iid_1",
					"description": "An interface ID."
				},
				{
					"name": "iid_2",
					"description": "An interface ID."
				},
				{
					"name": "len",
					"description": "The maximum characters to compare."
				}
			],
			"returns":
			[
				{
					"type": "text:code",
					"value": "0"
				},
				" if the identifiers are equal."
			],
			"summary": "Compare two interface identifiers.",
			"description":
			[
				"Compare two interface identifiers with the same semantics as ",
				{
					"type": "ref:function",
					"name": "strncmp",
					"parameters":
					[
						[ "const",  "char", "*" ],
						[ "const",  "char", "*" ],
						"size_t"
					]
				},
				"."
			]
		},
		{
			"type": "macro",
			"name": "IV_MATCHES",
			"parameters":
			[
				{
					"name": "version",
					"description": "The version being checked."
				},
				{
					"name": "req_version",
					"description": "The required version."
				}
			],
			"returns":
			[
				{
					"type": "ref:constant",
					"name": "true"
				},
				" if compatible, ",
				{
					"type": "ref:constant",
					"name": "false"
				},
				" otherwise."
			],
			"summary": "Check if an interface version implements a required version.",
			"description":
			[
				"Check if an interface version implements a required version.",
				" For a normal ",
				{
					"type": "ref:parameter",
					"name": "req_version"
				},
				", not ",
				{
					"type": "text:code",
					"value": "0.x"
				},
				", this will check if the major versions are equal and that the minor version is greater than or equal to the required minor version.",
				" For a special ",
				{
					"type": "ref:parameter",
					"name": "req_version"
				},
				", ",
				{
					"type": "text:code",
					"value": "0.x"
				},
				", the minor versions must be equal to match.",
				{
					"type": "parabreak"
				},
				" This is an inline version of ",
				{
					"type": "ref:function",
					"name": "iv_matches",
					"parameters":
					[
						"iv_version_t",
						"iv_version_t"
					]
				},
				" that is optimized for a compile-time ",
				{
					"type": "ref:parameter",
					"name": "req_version"
				},
				" constant.",
				" Using this with a non-constant may be less efficient than calling the function implementation."
			],
			"since": "1.0"
		},
		{
			"type": "function",
			"name": "iv_matches",
			"parameters":
			[
				{
					"type": "iv_version_t",
					"name": "version",
					"description": "The version being checked."
				},
				{
					"type": "iv_version_t",
					"name": "req_version",
					"description": "The required version."
				}
			],
			"returns":
			{
				"type": "bool",
				"description":
				[
					{
						"type": "ref:constant",
						"name": "true"
					},
					" if compatible, ",
					{
						"type": "ref:constant",
						"name": "false"
					},
					" otherwise."
				]
			},
			"summary": "Check if an interface version implements a required version.",
			"description":
			[
				"Check if an interface version implements a required version.",
				" For a normal ",
				{
					"type": "ref:parameter",
					"name": "req_version"
				},
				", not ",
				{
					"type": "text:code",
					"value": "0.x"
				},
				", this will check if the major versions are equal and that the minor version is greater than or equal to the required minor version.",
				" For a special ",
				{
					"type": "ref:parameter",
					"name": "req_version"
				},
				", ",
				{
					"type": "text:code",
					"value": "0.x"
				},
				", the minor versions must be equal to match."
			],
			"since": "1.0"
		}
	],
	"see":
	[
		{
			"type": "ref:generic",
			"name": "Interface Versioning",
			"link": "iv",
			"section": "3"
		}
	]
}
