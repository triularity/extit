{
	"title": "Interface Versioning Map",
	"includes":
	[
		"iv/base.h",
		"iv/util.h"
	],
	"libraries":
	[
		"iv_util"
	],
	"synopsis":
	[
		{
			"type": "typedef",
			"name": "iv_map_t",
			"_value": [ "struct", "_iv_map" ],
			"description": "An interface versioning map instance.",
			"since": "1.0"
		},
		{
			"type": "function",
			"name": "iv_map_acquire_valueptr",
			"parameters":
			[
				{
					"type": [ "const", "iv_map_t", "*" ],
					"name": "map",
					"description": "The map."
				},
				{
					"type": [ "const", "char", "*" ],
					"name": "nid",
					"description": "A name identifier."
				},
				{
					"type": [ "const", "char", "*" ],
					"name": "iid",
					"description": "An interface identifier."
				},
				{
					"type": [ "const", "char", "**" ],
					"name": "internal_nid",
					"description":
					[
						"Where to store the internal name identifier string, or ",
						{
							"type": "ref:constant",
							"name": "NULL"
						},
						" to ignore."
					]
				},
				{
					"type": [ "const", "char", "**" ],
					"name": "internal_iid",
					"description":
					[
						"Where to store the internal interface identifier string, or ",
						{
							"type": "ref:constant",
							"name": "NULL"
						},
						" to ignore."
					]
				}
			],
			"returns":
			{
				"type": [ "void", "**" ],
				"description":
				[
					"The value pointer, or ",
					{
						"type": "ref:constant",
						"name": "NULL"
					},
					" if none was found.",
					" Callers of this function are expected to set the contents of the pointer to non-",
					{
						"type": "ref:constant",
						"name": "NULL"
					},
					", marking it as in-use."
				]
			},
			"summary": "Get the internal value pointer for a name/interface pair, creating an entry if needed.",
			"description": "Get the internal value pointer for a name/interface pair, creating an entry if needed.",
			"since": "1.0"
		},
		{
			"type": "function",
			"name": "iv_map_cleanup",
			"parameters":
			[
				{
					"type": [ "iv_map_t", "*" ],
					"name": "map",
					"description": "The map."
				},
				{
					"type":
					{
						"type": "function",
						"parameters":
						[
							{
								"type": [ "void", "**" ],
								"name": "valueptr"
							}
						]
					},
					"name": "cleaner",
					"description": "A callback for freeing unused entry values."
				}
			],
			"summary": "Release any internal memory that is no longer needed.",
			"description":
			[
				"Release any internal memory that is no longer needed.",
				" This will iterate through all entries in the map that are not ",
				{
					"type": "ref:constant",
					"name": "NULL"
				},
				", calling ",
				{
					"type": "ref:parameter",
					"name": "cleaner"
				},
				" with the value pointer of each one.",
				" That function should attempt to release any empty/unused data and set such entries pointers to ",
				{
					"type": "ref:constant",
					"name": "NULL"
				},
				".",
				" Entries left with ",
				{
					"type": "ref:constant",
					"name": "NULL"
				},
				" values will removed from the map."
			],
			"since": "1.0"
		},
		{
			"type": "function",
			"name": "iv_map_create",
			"parameters":
			[
				{
					"type": "uint32_t",
					"name": "hashsize",
					"description":
					[
						"The hash size, or ",
						{
							"type": "text:code",
							"value": "0"
						},
						" to use the default."
					]
				},
				{
					"type":
					{
						"type": "function",
						"parameters":
						[
							{
								"type": [ "void", "*" ],
								"name": "value"
							}
						]
					},
					"name": "free_callback",
					"description": "A callback for freeing entry values when the map is destroyed."
				}
			],
			"returns":
			{
				"type": [ "iv_map_t", "*" ],
				"description":
				[
					"A map, or ",
					{
						"type": "ref:constant",
						"name": "NULL"
					},
					" if memory allocation failed."
				]
			},
			"summary": "Create an interface versioning map.",
			"description":
			[
				"Create an interface versioning map.",
				" The map should be freed using ",
				{
					"type": "ref:function",
					"name": "iv_map_destroy",
					"parameters":
					[
						[ "iv_map_t", "*" ]
					]
				},
				"."
			],
			"since": "1.0"
		},
		{
			"type": "function",
			"name": "iv_map_destroy",
			"parameters":
			[
				{
					"type": [ "iv_map_t", "*" ],
					"name": "map",
					"description": "The map."
				}
			],
			"description": "Destroy an interface versioning map.",
			"since": "1.0"
		},
		{
			"type": "function",
			"name": "iv_map_get",
			"parameters":
			[
				{
					"type": [ "const", "iv_map_t", "*" ],
					"name": "map",
					"description": "The map."
				},
				{
					"type": [ "const", "char", "*" ],
					"name": "nid",
					"description": "A name identifier."
				},
				{
					"type": [ "const", "char", "*" ],
					"name": "iid",
					"description": "An interface identifier."
				}
			],
			"returns":
			{
				"type": [ "void", "*" ],
				"description":
				[
					"The entry value, or ",
					{
						"type": "ref:constant",
						"name": "NULL"
					},
					" if none was found."
				]
			},
			"summary": "Get the value for a name/interface pair.",
			"description": "Get the value for a name/interface pair.",
			"since": "1.0"
		},

		{
			"type": "function",
			"name": "iv_map_get_valueptr",
			"parameters":
			[
				{
					"type": [ "const", "iv_map_t", "*" ],
					"name": "map",
					"description": "The map."
				},
				{
					"type": [ "const", "char", "*" ],
					"name": "nid",
					"description": "A name identifier."
				},
				{
					"type": [ "const", "char", "*" ],
					"name": "iid",
					"description": "An interface identifier."
				}
			],
			"returns":
			{
				"type": [ "void", "**" ],
				"description":
				[
					"The value pointer, or ",
					{
						"type": "ref:constant",
						"name": "NULL"
					},
					" if none was found."
				]
			},
			"summary": "Get the internal value pointer for a name/interface pair.",
			"description":
			[
				"Get the internal value pointer for a name/interface pair.",
				" This is similar to ",
				{
					"type": "ref:function",
					"name": "iv_map_acquire_valueptr",
					"parameters":
					[
						[ "iv_map_t", "*" ],
						[ "const", "char", "*" ],
						[ "const", "char", "*" ],
						[ "const", "char", "**" ],
						[ "const", "char", "**" ]
					]
				},
				", except an entry will not be created if it does not exist."
			],
			"since": "1.0"
		},
		{
			"type": "function",
			"name": "iv_map_intern_interfaceid",
			"parameters":
			[
				{
					"type": [ "iv_map_t", "*" ],
					"name": "map",
					"description": "The map."
				},
				{
					"type": [ "const", "char", "*" ],
					"name": "nid",
					"description": "A name identifier."
				},
				{
					"type": [ "const", "char", "*" ],
					"name": "iid",
					"description": "An interface identifier."
				}
			],
			"returns":
			{
				"type": [ "const", "char", "*" ],
				"description":
				[
					"The internal interface identifier, or ",
					{
						"type": "ref:constant",
						"name": "NULL"
					},
					" if no entry is found."
				]
			},
			"summary": "Get the internal interface identifier for a given name/interface pair.",
			"description":
			[
				"Get the internal interface identifier for a given name/interface pair.",
				" The identifier, if found, is guaranteed to be valid as long as the entry exists and points to a non-",
				{
					"type": "ref:constant",
					"name": "NULL"
				},
				" value."
			],
			"since": "1.0"
		},
		{
			"type": "function",
			"name": "iv_map_intern_nameid",
			"parameters":
			[
				{
					"type": [ "iv_map_t", "*" ],
					"name": "map",
					"description": "The map."
				},
				{
					"type": [ "const", "char", "*" ],
					"name": "nid",
					"description": "A name identifier."
				},
				{
					"type": [ "const", "char", "*" ],
					"name": "iid",
					"description": "An interface identifier."
				}
			],
			"returns":
			{
				"type": [ "const", "char", "*" ],
				"description":
				[
					"The internal name identifier, or ",
					{
						"type": "ref:constant",
						"name": "NULL"
					},
					" if no entry is found."
				]
			},
			"summary": "Get the internal name identifier for a given name/interface pair.",
			"description":
			[
				"Get the internal name identifier for a given name/interface pair.",
				" The identifier, if found, is guaranteed to be valid as long as the entry exists and points to a non-",
				{
					"type": "ref:constant",
					"name": "NULL"
				},
				" value."
			],
			"since": "1.0"
		}
	],
	"see":
	[
		{
			"type": "ref:generic",
			"name": "Interface Versioning",
			"link": "iv",
			"section": "3"
		}
	]
}
